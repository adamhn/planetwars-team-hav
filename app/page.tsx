"use client"

import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { getAllPlanets } from "../utils/api";
import { Planet } from "../utils/types";

import { Title } from "@gjensidige/nci-core-typography/lib/title";
import { Text } from "@gjensidige/nci-core-typography/lib/text";
import { Container, Col, Row } from "@gjensidige/nci-core-grid/lib";
import { Input } from "@gjensidige/nci-core-forms/lib/input";
import { useEffect, useState } from "react";
import PlanetItem from "../components/Planet";
import useWindowSize from "react-use/lib/useWindowSize";

import Confetti from "react-confetti";

async function getData() {
  const data = await getAllPlanets();
  const planets = data.data.allPlanets.planets as Planet[];
  return planets;
}

// interface Props {
//   planets: Planet[];
// }

const Home = async () => {
  const planets = await getData();
  const [searchResults, setSearchResults] = useState<Planet[]>(planets);
  const [searchInput, setSearchInput] = useState("");
  const { width, height } = useWindowSize();

  useEffect(() => {
    console.log(planets)
  }, [planets])

  const onSearchChanged = (event: React.ChangeEvent<HTMLInputElement>) => {
    const input = event.currentTarget.value;
    setSearchInput(input);

    if (!input) {
      setSearchResults(planets);
    } else {
      const filteredPlanets = planets.filter((p) =>
        p.name.toLowerCase().includes(input.toLowerCase())
      );
      setSearchResults(filteredPlanets);
    }
  };

  return (
    <>
      {searchResults.length === 0 && (
        <Confetti
          run={searchResults.length === 0}
          width={width}
          height={height}
          gravity={0.15}
        />
      )}
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main>
          <Container>
            <Title tag="h1">Planet wars</Title>
            <Row>
              <Col className={styles.searchWrapper} xxs={6}>
                <Input
                  id="search-id"
                  labelText="Search for planets"
                  name="search-name"
                  onChange={onSearchChanged}
                  value={searchInput}
                />
              </Col>
            </Row>
            <div className={styles.planetsWrapper}>
              {searchResults.map((planet) => (
                <PlanetItem key={planet.id} planet={planet} />
              ))}
            </div>
            {searchResults.length === 0 && (
              <Text className={styles.notFoundTxt} size="h4">
                You have found a not found planet.
              </Text>
            )}
          </Container>
        </main>
        <footer className={styles.footer}>
          <a
            href="https://gjensidige.no/"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by Team D-Hav
          </a>
        </footer>
      </div>
    </>
  );
};
// This gets called on every request
export async function getServerSideProps() {
  // Fetch data from external API
  try {
    console.log("test")
    const data = await getAllPlanets();
    const planets = data.data.allPlanets.planets as Planet[];
    return { props: { planets } };
  } catch (error) {
    console.error("could not fetch planets", error);
  }

  // Pass data to the page via props
  return { props: null };
}

export default Home;
